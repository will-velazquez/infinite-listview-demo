<UserControl
    x:Class="App1.OtherCheckbox"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Grid
        x:Name="PART_RootGrid"
        Tapped="UserControl_Tapped"
        IsDoubleTapEnabled="False"
        Background="Transparent">
        <VisualStateManager.VisualStateGroups>
            <!--
                Eash VisualStateGroup defines mutually-exclusive states,
                similar to radio buttons -
                    only one VisualState may be active at a time, per group
            -->
            <VisualStateGroup>
                <!--
                    VisualState names are unique per control
                    eg. I cannot have another VisualState named 'Normal' in this control
                -->
                <VisualState x:Name="Disabled">
                    <VisualState.Setters>
                        <Setter Target="PART_RootGrid.Opacity" Value="0.4" />
                        <Setter Target="PART_CheckboxCheckmark.Foreground" Value="Red" />
                    </VisualState.Setters>
                </VisualState>
                <!--
                    Notice that I do not need to do anything to 'reset' the properties when going Disabled->Normal,
                    By saying "Normal" is a mutually exclusive state w/ Disabled, it'll 'undo' set properties
                -->
                <VisualState x:Name="Normal" />
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="Unchecked">
                    <VisualState.Setters>
                        <!-- I set visibility collaprsed in 'Unchecked', but don't need to say Visible in 'Checked' -->
                        <Setter Target="PART_CheckboxCheckmark.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Checked">
                    <VisualState.Setters>
                        <!-- Ditto - I set Foreground in Checked, but it goes back to default on Unchecked -->
                        <Setter Target="PART_CheckboxChecktext.Foreground" Value="LightGreen" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <StackPanel Orientation="Horizontal">
            <Border
                Width="40"
                Height="40"
                BorderBrush="Black"
                Background="LightGray"
                BorderThickness="1">
                <FontIcon x:Name="PART_CheckboxCheckmark" Foreground="DarkBlue" Glyph="&#xE709;" />
            </Border>
            <TextBlock
                x:Name="PART_CheckboxChecktext"
                IsDoubleTapEnabled="False" VerticalAlignment="Center" Text="Hello, world!" />
        </StackPanel>
    </Grid>
</UserControl>
